import { getYouTubeVideoId } from '../utils';

// In a real app, this would make an API call to a backend service to get metadata.
// For this example, we'll return some mock data.

export const processYouTubeUrl = async (url: string): Promise<{ title: string; summary: string; videoId: string } | null> => {
    const videoId = getYouTubeVideoId(url);
    if (!videoId) return null;

    // Mocked data
    return {
        title: "Sample YouTube Video",
        summary: "This is a summary of the YouTube video. In a real application, this would be fetched from an API or generated by an AI model.",
        videoId: videoId,
    };
};

export const processWebsiteUrl = async (url: string): Promise<{ title: string; content: string; url: string } | null> => {
    try {
        // In a real app, you'd use a backend proxy for this to avoid CORS issues.
        // This is a simplified example.
        const title = new URL(url).hostname;
        return {
            title: title,
            content: `Content from ${url}`,
            url: url,
        };
    } catch (error) {
        console.error("Invalid URL:", error);
        return null;
    }
};
